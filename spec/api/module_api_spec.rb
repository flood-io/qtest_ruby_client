=begin
#qTest Manager API Version 8.6 - 9.1

#qTest Manager API Version 8.6 - 9.1

OpenAPI spec version: 8.6 - 9.1

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::ModuleApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ModuleApi' do
  before do
    # run before each test
    @instance = SwaggerClient::ModuleApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ModuleApi' do
    it 'should create an instact of ModuleApi' do
      expect(@instance).to be_instance_of(SwaggerClient::ModuleApi)
    end
  end

  # unit tests for create_module
  # Creates a Module
  # To create a Module under root or a sub-Module under a parent Module  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 4+
  # @param project_id ID of the project
  # @param body &lt;em&gt;name (required):&lt;/em&gt; the Module name  &lt;em&gt;shared:&lt;/em&gt; Specify &lt;em&gt;shared&#x3D;true&lt;/em&gt; to share this Module to other projects. Only use it if Test Case Sharing feature is enabled in your project
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :parent_id The parent Module which will contain the newly created one. If it is not specified, the newly created module is located under root  Use this parameter if your qTest Manager version is 6+. For older versions, use &lt;em&gt;parent_id&lt;/em&gt; in the request body
  # @return [ModuleResource]
  describe 'create_module test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_module
  # Deletes a Module
  # To delete a Module  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 6+
  # @param project_id ID of the project
  # @param module_id ID of Module to delete
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :force &lt;em&gt;force&#x3D;true&lt;/em&gt; - delete the Module and its children  force&#x3D;false - default value. Only delete the Module if it contains no sub Modules or Test Cases
  # @return [Message]
  describe 'delete_module test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_module
  # Gets a Module
  # To retrieve a Module  &lt;em&gt;qTest Manager version:&lt;/em&gt; 6+
  # @param project_id ID of the project
  # @param module_id ID of the Module
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand Specify &lt;em&gt;expand&#x3D;descendants&lt;/em&gt; to include the Module&#39;s sub and grand-sub Modules in the response
  # @return [ModuleResource]
  describe 'get_module test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sub_modules_of
  # Gets multiple Modules
  # To search for Modules under root or sub-Modules under a parent Module  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 6+
  # @param project_id ID of the project
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :parent_id ID of the parent Module. Leave it blank to retrieve Modules under root
  # @option opts [String] :search The free-text to search for Modules by names. You can utilize this parameter to search for Modules. Leave it blank to retrieve all Modules under root or the parent Module
  # @option opts [String] :expand 
  # @return [Array<ModuleResource>]
  describe 'get_sub_modules_of test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_module
  # Updates a Module
  # To update a Module or move it to another parent Module
  # @param project_id ID of the project
  # @param module_id ID of the Module
  # @param body The Module&#39;s update properties
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :parent_id ID of the parent Module which the Module will be moved to  &lt;strong&gt;Important:&lt;/strong&gt; If you use this parameter, the request body will be ignored. That means the Module is being moved but it will not be updated with the properties specified in the request body
  # @return [ModuleResource]
  describe 'update_module test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
