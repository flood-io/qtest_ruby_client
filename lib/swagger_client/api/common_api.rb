=begin
#qTest Manager API Version 8.6 - 9.1

#qTest Manager API Version 8.6 - 9.1

OpenAPI spec version: 8.6 - 9.1

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module SwaggerClient
  class CommonApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Edit System Field of an Object Type by the field
    # To edit System Field of an Object Type by the field
    # @param project_id ID of the project
    # @param field_id ID of the field.
    # @param body Given resource to edit a system field.
    # @param object_type The object type.
    # @param [Hash] opts the optional parameters
    # @return [FieldResource]
    def edit_system_field(project_id, field_id, body, object_type, opts = {})
      data, _status_code, _headers = edit_system_field_with_http_info(project_id, field_id, body, object_type, opts)
      return data
    end

    # Edit System Field of an Object Type by the field
    # To edit System Field of an Object Type by the field
    # @param project_id ID of the project
    # @param field_id ID of the field.
    # @param body Given resource to edit a system field.
    # @param object_type The object type.
    # @param [Hash] opts the optional parameters
    # @return [Array<(FieldResource, Fixnum, Hash)>] FieldResource data, response status code and response headers
    def edit_system_field_with_http_info(project_id, field_id, body, object_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CommonApi.edit_system_field ..."
      end
      # verify the required parameter 'project_id' is set
      fail ArgumentError, "Missing the required parameter 'project_id' when calling CommonApi.edit_system_field" if project_id.nil?
      # verify the required parameter 'field_id' is set
      fail ArgumentError, "Missing the required parameter 'field_id' when calling CommonApi.edit_system_field" if field_id.nil?
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling CommonApi.edit_system_field" if body.nil?
      # verify the required parameter 'object_type' is set
      fail ArgumentError, "Missing the required parameter 'object_type' when calling CommonApi.edit_system_field" if object_type.nil?
      # verify enum value
      unless ['requirements', 'test-cases', 'defects', 'test-runs', 'test-suites', 'releases', 'builds'].include?(object_type)
        fail ArgumentError, "invalid value for 'object_type', must be one of requirements, test-cases, defects, test-runs, test-suites, releases, builds"
      end
      # resource path
      local_var_path = "/api/v3/projects/{projectId}/settings/{objectType}/system-fields/{fieldId}".sub('{format}','json').sub('{' + 'projectId' + '}', project_id.to_s).sub('{' + 'fieldId' + '}', field_id.to_s).sub('{' + 'objectType' + '}', object_type.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['Authorization']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'FieldResource')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CommonApi#edit_system_field\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # field.updateCustomField
    # Update active or inactive custom fields of an Object Type
    # @param project_id ID of the project
    # @param object_type The object type
    # @param body Given resource to update custom fields.
    # @param [Hash] opts the optional parameters
    # @return [Array<FieldResource>]
    def update_custom_field(project_id, object_type, body, opts = {})
      data, _status_code, _headers = update_custom_field_with_http_info(project_id, object_type, body, opts)
      return data
    end

    # field.updateCustomField
    # Update active or inactive custom fields of an Object Type
    # @param project_id ID of the project
    # @param object_type The object type
    # @param body Given resource to update custom fields.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<FieldResource>, Fixnum, Hash)>] Array<FieldResource> data, response status code and response headers
    def update_custom_field_with_http_info(project_id, object_type, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CommonApi.update_custom_field ..."
      end
      # verify the required parameter 'project_id' is set
      fail ArgumentError, "Missing the required parameter 'project_id' when calling CommonApi.update_custom_field" if project_id.nil?
      # verify the required parameter 'object_type' is set
      fail ArgumentError, "Missing the required parameter 'object_type' when calling CommonApi.update_custom_field" if object_type.nil?
      # verify enum value
      unless ['requirements', 'test-cases', 'defects', 'test-runs', 'test-suites', 'releases', 'builds'].include?(object_type)
        fail ArgumentError, "invalid value for 'object_type', must be one of requirements, test-cases, defects, test-runs, test-suites, releases, builds"
      end
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling CommonApi.update_custom_field" if body.nil?
      # resource path
      local_var_path = "/api/v3/projects/{projectId}/settings/{objectType}/custom-fields/active".sub('{format}','json').sub('{' + 'projectId' + '}', project_id.to_s).sub('{' + 'objectType' + '}', object_type.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['Authorization']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<FieldResource>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CommonApi#update_custom_field\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
